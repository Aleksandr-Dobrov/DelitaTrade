@using DelitaTrade.Core.ViewModels;
@using System.Security.Claims
@using static DelitaTrade.Common.Constants.DelitaIdentityConstants.RoleNames;
@using static DelitaTrade.Common.Constants.FormatConstant.DateTimeFormat;
@model DetailReturnProtocolViewModel;
@{
    ViewData["Title"] = "Return Protocol Details";
    ViewData["ReturnedProductIds"] = string.Join(',', Model.ReturnedProducts.Select(p => p.Id));    
}

<head>
    <link rel="stylesheet" href="~/css/ReturnProtocol/returnProtocol.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/ReturnProtocol/warehouseBackground.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>

<div class="delita-shadow">
    <main>        
        <div class="details-display light-gray-80">
            <div class="light-gray-80 protocol-detail">
                <h4>Return on: <strong>@Model.ReturnedDate.ToString(AppDateFormat)</strong>г.</h4>
                <p>Company object: <strong>@Model.CompanyObjectName</strong></p>
                <div class="protocol-authors">
                    <div>
                        <p>Trader name: <strong>@Model.TraderName</strong></p>
                        <p>Pay method: <strong>@Model.PayMethod</strong></p>
                    </div>
                    <div>
                        <p>Driver name: <strong>@Model.DriverName</strong></p>
                        @if (Model.ApproverName == null)
                        {
                            <p class="text-danger"><strong>Not approved</strong></p>
                        }
                        else
                        {
                            <p>Approve by: <strong>@Model.ApproverName</strong></p>
                        }
                    </div>
                </div>
            </div>
            @{
                if (User.IsInRole(Driver) && Model.ApproverName == null)
                {
                    <div class="action">
                        <a asp-controller="ReturnProtocol" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary d-flex justify-content-center align-items-center flex-fill mx-1">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                        <a asp-controller="ReturnProtocol" asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger d-flex justify-content-center align-items-center flex-fill mx-1">
                            <i class="fas fa-trash"></i> Delete
                        </a>
                    </div>
                }
            }
        </div>
    </main>
    
    <div class="products-list gray-70">
        @if (Model.ReturnedProducts != null && Model.ReturnedProducts.Any())
        {
            <form asp-controller="ReturnProtocol" asp-action="Approve" method="post">
                <input asp-for="@Model.Id" type="hidden" value="@Model.Id" />
                <input asp-for="@Model.LastChange" name="@nameof(Model.LastChange)" type="hidden" value="@Model.LastChange" />
                <input type="hidden" name="ReturnedProductIds" value="@ViewData["ReturnedProductIds"]" />

                @{
                    bool isValidUserId = Guid.TryParse(User.FindFirstValue(ClaimTypes.NameIdentifier), out Guid userId);
                    bool isEditable = (Model.ApproverName == null || (isValidUserId && Model.ApproverId.HasValue && userId == Model.ApproverId.Value));
                }
                <div class="products-header">
                    @if (User.IsInRole(WarehouseManager) && (Model.ApproverName == null || (isValidUserId && Model.ApproverId.HasValue && userId == Model.ApproverId.Value)))
                    {
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-edit"></i> Approve
                        </button>
                    }
                    <h2><strong>Return products</strong></h2>
                </div>
                    <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Quantity</th>
                            <th>Best before</th>
                            <th>Batch</th>
                            <th>Return category</th>
                            <th>Description</th>
                            @if ((User.IsInRole(Driver) && Model.ApproverName == null)
                                || (User.IsInRole(WarehouseManager)))
                            {
                                <th></th>
                                <th></th>
                            }
                        </tr>
                    </thead>
                    <tbody id="protocolsTableBody">
                       

                           
                                

                        @foreach (var product in Model.ReturnedProducts)
                        {
                           
                            <tr class="light-gray-80">
                            <td>@product.Product.Name</td>
                            <td>@product.Quantity @product.Product.Unit</td>
                            <td>@product.BestBefore.ToString("dd/MM/yyyy")</td>
                            <td>@product.Batch</td>
                            <td>@product.DescriptionCategory.Name</td>
                            <td>@product.Description?.Description</td>
                            @if (User.IsInRole(Driver) && Model.ApproverName == null)
                            {
                                <td>
                                    <a asp-controller="ReturnProduct" asp-action="Edit" asp-route-id="@product.Id" class="btn btn-primary">
                                        <i class="fas fa-edit"></i> Edit
                                    </a>
                                </td>
                                <td>
                                    <form asp-controller="ReturnProduct" asp-action="Delete" asp-route-id="@product.Id" method="post">
                                        <button type="submit" class="btn btn-danger">
                                            <i class="fas fa-trash"></i> Delete
                                        </button>
                                    </form>
                                </td>
                            }
                            else if (User.IsInRole(WarehouseManager) && isEditable)
                            {
                                <td>
                                    <input name="ReturnedProduct[@product.Id].Id" type="hidden" value="@product.Id" />
                                <select asp-for=@product.IsScrapped name="ReturnedProducts[@product.Id].IsScrapped" id="pay-method" class="form-control" aria-required="true" asp-items="@(new SelectList(Model.Conditions, "IsScrapped", "Condition"))">
                                        <option value="">...</option>
                                    </select>
                                </td>
                                <td>
                                <input name="ReturnedProducts[@product.Id].WarehouseDescription" type="text" class="form-label-add-edit" value="@product.WarehouseDescription" />
                                </td>
                            }
                            else if (User.IsInRole(WarehouseManager) && isEditable == false)
                            {
                                <td>
                                    <input name="ReturnedProduct[@product.Id].Id" type="hidden" value="@product.Id" />
                                <input name="ReturnedProducts[@product.Id].IsScrapped" type="text" class="form-label-add-edit" value="@Model.Conditions.First(c => c.IsScrapped == product.IsScrapped).Condition" readonly/>
                                </td>
                                <td>
                                    <input name="ReturnedProducts[@product.Id].WarehouseDescription" type="text" class="form-label-add-edit" value="@product.WarehouseDescription" readonly/>
                                </td>
                            }
                        
                        </tr>
                        }
                    </tbody>
                    
                </table>
            </form>
        }
        else
        {
            <p class="text-center">No products returned.</p>
        }
        @if (User.IsInRole(Driver) && Model.ApproverName == null)
        {
            <a asp-controller="ReturnProduct" asp-action="Create" asp-route-id="@Model.Id" class="btn btn-warning btn-dark-text w-100 py-2 fw-bold rounded">
                <i class="fas fa-save"></i> Add
            </a>
        }
    </div>
</div>
